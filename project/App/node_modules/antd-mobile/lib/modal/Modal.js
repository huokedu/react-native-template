'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var React = _interopRequireWildcard(_react);

var _reactNative = require('react-native');

var _index = require('./style/index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var AntmModal = function (_React$Component) {
    (0, _inherits3["default"])(AntmModal, _React$Component);

    function AntmModal(props) {
        (0, _classCallCheck3["default"])(this, AntmModal);

        var _this = (0, _possibleConstructorReturn3["default"])(this, _React$Component.call(this, props));

        _this.onRequestClose = function () {
            _this.setState({
                visible: false
            });
        };
        _this.onClosePress = function () {
            _this.props.onClose();
            _this.setState({
                visible: false
            });
        };
        _this.state = {
            visible: props.visible || false
        };
        return _this;
    }

    AntmModal.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
        if (nextProps.visible !== this.state.visible) {
            this.setState({
                visible: nextProps.visible
            });
        }
    };

    AntmModal.prototype.render = function render() {
        var _this2 = this;

        var _props = this.props;
        var title = _props.title;
        var closable = _props.closable;
        var maskClosable = _props.maskClosable;
        var footer = _props.footer;
        var animated = _props.animated;
        var onShow = _props.onShow;
        var transparent = _props.transparent;
        var children = _props.children;
        var style = _props.style;
        var onRequestClose = _props.onRequestClose;

        var showModal = this.state.visible;
        var animationType = animated ? transparent ? 'fade' : 'slide' : 'none';
        var innerStyle = transparent ? { backgroundColor: 'white' } : { backgroundColor: 'transparent' };
        var btnGroupStyle = footer.length === 2 ? _index2["default"].buttnGroupH : _index2["default"].buttnGroupV;
        var buttonWrapStyle = footer.length === 2 ? _index2["default"].buttnWrapH : _index2["default"].buttnWrapV;
        var footerDom = footer.length ? React.createElement(
            _reactNative.View,
            { style: [btnGroupStyle] },
            footer.map(function (button, i) {
                return React.createElement(
                    _reactNative.View,
                    { key: i, style: [buttonWrapStyle] },
                    React.createElement(
                        _reactNative.TouchableOpacity,
                        { onPress: function onPress() {
                                if (button.onPress) {
                                    button.onPress();
                                }
                                _this2.onClosePress();
                            } },
                        React.createElement(
                            _reactNative.Text,
                            { style: [_index2["default"].buttonText] },
                            button.text || '按钮' + i
                        )
                    )
                );
            })
        ) : null;
        return React.createElement(
            _reactNative.Modal,
            { animationType: animationType, onRequestClose: onRequestClose || this.onRequestClose, onShow: onShow, transparent: transparent, visible: showModal },
            transparent ? React.createElement(
                _reactNative.View,
                { style: [_index2["default"].container] },
                maskClosable ? React.createElement(
                    _reactNative.TouchableWithoutFeedback,
                    { onPress: this.onClosePress },
                    React.createElement(_reactNative.View, { style: [_index2["default"].maskClosable] })
                ) : null,
                React.createElement(
                    _reactNative.View,
                    { style: [_index2["default"].innerContainer, innerStyle, style] },
                    title ? React.createElement(
                        _reactNative.Text,
                        { style: [_index2["default"].header] },
                        title
                    ) : null,
                    React.createElement(
                        _reactNative.View,
                        { style: _index2["default"].body },
                        children
                    ),
                    footer ? React.createElement(
                        _reactNative.View,
                        null,
                        footerDom
                    ) : null,
                    closable ? React.createElement(
                        _reactNative.TouchableWithoutFeedback,
                        { onPress: this.onClosePress },
                        React.createElement(
                            _reactNative.View,
                            { style: [_index2["default"].closeWrap] },
                            React.createElement(
                                _reactNative.Text,
                                { style: [_index2["default"].close] },
                                '×'
                            )
                        )
                    ) : null
                )
            ) : React.createElement(
                _reactNative.View,
                { style: style },
                children
            )
        );
    };

    return AntmModal;
}(React.Component);

AntmModal.defaultProps = {
    visible: false,
    closable: false,
    maskClosable: false,
    transparent: false,
    animated: true,
    style: {},
    onClose: function onClose() {},
    onShow: function onShow() {},

    footer: []
};
exports["default"] = AntmModal;
module.exports = exports['default'];